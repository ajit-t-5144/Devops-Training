pipeline {
    
    agent any
    
    environment {
        buildnum = currentBuild.getNumber()
        
         dockerImagename = "ajit5144/devops-app-${buildnum}"
         
         dockerRun = "docker run -p 8081:8080 -d ${dockerImagename}"
    }
    
    tools {
         groovy 'groovy'
         maven 'maven'
         jdk 'jdk'
    } //tools end 
    
    stages {
        stage('Code Checkout') {
            steps {
              git branch: 'dock-br-2', url: 'https://github.com/ajit-t-5144/DevOps-Demo-WebApp.git'
            }
        }//checkout stage end
        
        stage('echo build num'){
            steps{
                echo " Build number is ${buildnum}"
            }
        }//echo end
        
        stage('Generate Package'){
            steps{
                sh 'mvn clean package'
            }    
            
        }//generate end 
        
         stage(' Build Docker Image'){
            steps{ 
                 sh 'docker build -t ${dockerImagename} --pull=true /var/lib/jenkins/workspace/devops-training'
                 //echo "${dockerImagename}"
            } 
            
            
         }//Docker build done  
         stage(' Push to Docker Hub'){
            steps{ 
                withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerhub')]) {
                    sh "docker login -u ajit5144 -p ${dockerhub}"
                 //echo "${dockerImagename}"
                }
                
                sh "docker push ${dockerImagename}"
                 
            }
       
        }//Docker Push done
        
        stage('Run Container on Dev Server') {
            steps{
        
            sshagent(['docker-c']) {
                 sh "ssh -o StrictHostKeyChecking=no azureuser@137.116.36.146 ${dockerRun}"
                }
            }   
            
        }//Run container end 
        
        
        
    } //stages end
    
}//pipeline end
